{"ast":null,"code":"var _jsxFileName = \"/Users/r2h_2/Documents/breakingbad-react/breakingbad/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Header from './components/ui/header';\nimport CharacterGrid from './components/ui/characters/CharacterGrid';\nimport Search from './components/ui/search';\n\nfunction App() {\n  //set state and once we make request fill array with data from api\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    const fetchItems = async () => {\n      setIsLoading(true);\n      const result = await axios(`https://breakingbadapi.com/api/characters?name=${query}`);\n      console.log(result.data);\n      setItems(result.data);\n      setIsLoading(false);\n    };\n\n    fetchItems();\n  }, [query]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    getQuery: q => setQuery(q),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CharacterGrid, {\n    isLoading: isLoading,\n    items: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/r2h_2/Documents/breakingbad-react/breakingbad/src/App.js"],"names":["React","useState","useEffect","axios","Header","CharacterGrid","Search","App","items","setItems","isLoading","setIsLoading","query","setQuery","fetchItems","result","console","log","data","q"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AACA,SAASC,GAAT,GAAe;AACf;AACE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMY,UAAU,GAAG,YAAY;AAC7BH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMI,MAAM,GAAG,MAAMZ,KAAK,CAAE,kDAAiDS,KAAM,EAAzD,CAA1B;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACAT,MAAAA,QAAQ,CAACM,MAAM,CAACG,IAAR,CAAR;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAPD;;AASAG,IAAAA,UAAU;AACX,GAZM,EAYJ,CAACF,KAAD,CAZI,CAAT;AAcE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAET,SAA1B;AAAqC,IAAA,KAAK,EAAEF,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Header from './components/ui/header'\nimport CharacterGrid from './components/ui/characters/CharacterGrid';\nimport Search from './components/ui/search'\nfunction App() {\n//set state and once we make request fill array with data from api\n  const [items, setItems] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [query, setQuery] = useState('')\n\n  useEffect(() => {\n\n      const fetchItems = async () => {\n        setIsLoading(true)\n        const result = await axios(`https://breakingbadapi.com/api/characters?name=${query}`)\n\n        console.log(result.data)\n        setItems(result.data);\n        setIsLoading(false);\n      }\n\n      fetchItems()\n    }, [query])\n  \n    return (\n      <div className='container'>\n        <Header />\n        <Search getQuery={(q) => setQuery(q)} />\n        <CharacterGrid isLoading={isLoading} items={items} />\n      </div>\n    )\n  }\n\n  export default App"]},"metadata":{},"sourceType":"module"}